colplot("bob")
runif(1)
sample()?
)
?sample
drawn_balls = matrix(nrow = 1000, ncol = 4)
drawn_balls
knitr::opts_chunk$set(echo = TRUE)
box1 = c(rep("blue", 2), "red")
box2 = c(rep("blue", 2), rep("red", 3), "white")
drawn_balls = matrix(nrow = 1000, ncol = 4)
for(x in 1:1000){
x = runif(1)
if(x > 0.5){
drawn_balls[x, ] = sample(box1, size = 4, replace = TRUE)
} else{
drawn_balls[x, ] = sample(box2, size = 4)
}
}
drawn_balls
box1 = c(rep("blue", 2), "red")
box2 = c(rep("blue", 2), rep("red", 3), "white")
drawn_balls = matrix(nrow = 1000, ncol = 4)
for(x in 1:1000){
x = runif(1)
if(x > 0.5){
drawn_balls[x, ] = sample(box1, size = 4, replace = TRUE)
} else{
drawn_balls[x, ] = sample(box2, size = 4)
}
}
drawn_balls
drawn_balls[1, ] = c(1,2,3,4)
drawn_balls
for(x in 1:1000){
y = runif(1)
if(y > 0.5){
drawn_balls[x, ] = sample(box1, size = 4, replace = TRUE)
} else{
drawn_balls[x, ] = sample(box2, size = 4)
}
}
drawn_balls
table(drawn_balls)/1000
apply(drawn_balls, MARGIN 1)
apply(drawn_balls, MARGIN = 1, table)
apply(drawn_balls, MARGIN = 1)
?apply
apply(drawn_balls, MARGIN = 1, function(x) x == "blue")
apply(drawn_balls, MARGIN = 1, function(x) length(which(x == "blue")))
rel_freq = table(freq) / 1000
freq_balls = apply(drawn_balls, MARGIN = 1, function(x) length(which(x == "blue")))
rel_freq = table(freq_balls) / 1000
rel_freq
drawn_balls[seq(1, 5, 1), ]
?plot
freq_balls
freq_balls[1,]
freq_balls[1]
sum(1, 2)
a = c(1, 2)
sum(c)
sum(a)
a = matrix(nrow = 10, ncol = 4, data = 9)
a
drawn_balls[seq(1, 5, 1), ]
freq_balls = apply(drawn_balls, MARGIN = 1, function(x) length(which(x == "blue")))
rel_freq = table(freq_balls) / 1000
rel_freq
rel_freq_series = matrix(data = 0, nrow = 1000, ncol = 4)
for(i in 1:nrow(freq_balls)){
if(freq_balls[i] == 0){
rel_freq_series[i, 1] = sum(rel_freq_series[, 1]) / i
} else if(freq_balls[i] == 1){
rel_freq_series[i, 2] = sum(rel_freq_series[, 2]) / i
} else if(freq_balls[i] == 2){
rel_freq_series[i, 3] = sum(rel_freq_series[, 3]) / i
} else if(freq_balls[i] == 3){
rel_freq_series[i, 4] = sum(rel_freq_series[, 4]) / i
} else{
rel_freq_series[i, 5] = sum(rel_freq_series[, 5]) / i
}
}
plot(rel_freq_series)
rel_freq_series = matrix(data = 0, nrow = 1000, ncol = 4)
for(i in 1:1000){
if(freq_balls[i] == 0){
rel_freq_series[i, 1] = sum(rel_freq_series[, 1]) / i
} else if(freq_balls[i] == 1){
rel_freq_series[i, 2] = sum(rel_freq_series[, 2]) / i
} else if(freq_balls[i] == 2){
rel_freq_series[i, 3] = sum(rel_freq_series[, 3]) / i
} else if(freq_balls[i] == 3){
rel_freq_series[i, 4] = sum(rel_freq_series[, 4]) / i
} else{
rel_freq_series[i, 5] = sum(rel_freq_series[, 5]) / i
}
}
plot(rel_freq_series)
rel_freq_series = matrix(data = 0, nrow = 1000, ncol = 5)
for(i in 1:1000){
if(freq_balls[i] == 0){
rel_freq_series[i, 1] = sum(rel_freq_series[, 1]) / i
} else if(freq_balls[i] == 1){
rel_freq_series[i, 2] = sum(rel_freq_series[, 2]) / i
} else if(freq_balls[i] == 2){
rel_freq_series[i, 3] = sum(rel_freq_series[, 3]) / i
} else if(freq_balls[i] == 3){
rel_freq_series[i, 4] = sum(rel_freq_series[, 4]) / i
} else{
rel_freq_series[i, 5] = sum(rel_freq_series[, 5]) / i
}
}
plot(rel_freq_series)
rel_freq
freq_balls
rel_freq_series
rel_freq_series = matrix(data = 0, nrow = 1000, ncol = 5)
for(i in 1:1000){
if(freq_balls[i] == 0){
rel_freq_series[i, 1] = (1 + sum(rel_freq_series[, 1])) / i
} else if(freq_balls[i] == 1){
rel_freq_series[i, 2] = (1 + sum(rel_freq_series[, 2])) / i
} else if(freq_balls[i] == 2){
rel_freq_series[i, 3] = (1 + sum(rel_freq_series[, 3])) / i
} else if(freq_balls[i] == 3){
rel_freq_series[i, 4] = (1 + sum(rel_freq_series[, 4])) / i
} else{
rel_freq_series[i, 5] = (1 + sum(rel_freq_series[, 5])) / i
}
}
plot(rel_freq_series)
rel_freq_series
drawn_balls[seq(1, 5, 1), ]
freq_balls = apply(drawn_balls, MARGIN = 1, function(x) length(which(x == "blue")))
rel_freq = table(freq_balls) / 1000
rel_freq
rel_freq_series = matrix(data = 0, nrow = 1000, ncol = 5)
for(i in 1:1000){
if(freq_balls[i] == 0){
rel_freq_series[i, 1] = (i - 1) * (1 + sum(rel_freq_series[, 1])) / i
rel_freq_series[i, 2] = (i - 1) * sum(rel_freq_series[, 2]) / i
rel_freq_series[i, 3] = (i - 1) * sum(rel_freq_series[, 3]) / i
rel_freq_series[i, 4] = (i - 1) * sum(rel_freq_series[, 4]) / i
rel_freq_series[i, 5] = (i - 1) * sum(rel_freq_series[, 5]) / i
} else if(freq_balls[i] == 1){
rel_freq_series[i, 2] = (i - 1) * (1 + sum(rel_freq_series[, 2])) / i
rel_freq_series[i, 1] = (i - 1) * sum(rel_freq_series[, 1]) / i
rel_freq_series[i, 3] = (i - 1) * sum(rel_freq_series[, 3]) / i
rel_freq_series[i, 4] = (i - 1) * sum(rel_freq_series[, 4]) / i
rel_freq_series[i, 5] = (i - 1) * sum(rel_freq_series[, 5]) / i
} else if(freq_balls[i] == 2){
rel_freq_series[i, 3] = (i - 1) * (1 + sum(rel_freq_series[, 3])) / i
rel_freq_series[i, 2] = (i - 1) * sum(rel_freq_series[, 2]) / i
rel_freq_series[i, 1] = (i - 1) * sum(rel_freq_series[, 1]) / i
rel_freq_series[i, 4] = (i - 1) * sum(rel_freq_series[, 4]) / i
rel_freq_series[i, 5] = (i - 1) * sum(rel_freq_series[, 5]) / i
} else if(freq_balls[i] == 3){
rel_freq_series[i, 4] = (i - 1) * (1 + sum(rel_freq_series[, 4])) / i
rel_freq_series[i, 2] = (i - 1) * sum(rel_freq_series[, 2]) / i
rel_freq_series[i, 3] = (i - 1) * sum(rel_freq_series[, 3]) / i
rel_freq_series[i, 1] = (i - 1) * sum(rel_freq_series[, 1]) / i
rel_freq_series[i, 5] = (i - 1) * sum(rel_freq_series[, 5]) / i
} else{
rel_freq_series[i, 5] = (i - 1) * (1 + sum(rel_freq_series[, 5])) / i
rel_freq_series[i, 2] = (i - 1) * sum(rel_freq_series[, 2]) / i
rel_freq_series[i, 3] = (i - 1) * sum(rel_freq_series[, 3]) / i
rel_freq_series[i, 4] = (i - 1) * sum(rel_freq_series[, 4]) / i
rel_freq_series[i, 1] = (i - 1) * sum(rel_freq_series[, 1]) / i
}
}
plot(rel_freq_series)
rel_freq_series
rel_freq_series = matrix(data = 0, nrow = 1000, ncol = 5)
for(i in 1:1000){
if(freq_balls[i] == 0){
rel_freq_series[i, 1] = (i - 1) * (1 + rel_freq_series[i - 1, 1]) / i
rel_freq_series[i, 2] = (i - 1) * (rel_freq_series[i - 1, 2]) / i
rel_freq_series[i, 3] = (i - 1) * (rel_freq_series[i - 1, 3]) / i
rel_freq_series[i, 4] = (i - 1) * (rel_freq_series[i - 1, 4]) / i
rel_freq_series[i, 5] = (i - 1) * (rel_freq_series[i - 1, 5]) / i
} else if(freq_balls[i] == 1){
rel_freq_series[i, 2] = (i - 1) * (1 + (rel_freq_series[i - 1, 2])) / i
rel_freq_series[i, 1] = (i - 1) * (rel_freq_series[i - 1, 1]) / i
rel_freq_series[i, 3] = (i - 1) * (rel_freq_series[i - 1, 3]) / i
rel_freq_series[i, 4] = (i - 1) * (rel_freq_series[i - 1, 4]) / i
rel_freq_series[i, 5] = (i - 1) * (rel_freq_series[i - 1, 5]) / i
} else if(freq_balls[i] == 2){
rel_freq_series[i, 3] = (i - 1) * (1 + (rel_freq_series[i - 1, 3])) / i
rel_freq_series[i, 2] = (i - 1) * (rel_freq_series[i - 1, 2]) / i
rel_freq_series[i, 1] = (i - 1) * (rel_freq_series[i - 1, 1]) / i
rel_freq_series[i, 4] = (i - 1) * (rel_freq_series[i - 1, 4]) / i
rel_freq_series[i, 5] = (i - 1) * (rel_freq_series[i - 1, 5]) / i
} else if(freq_balls[i] == 3){
rel_freq_series[i, 4] = (i - 1) * (1 + (rel_freq_series[i - 1, 4])) / i
rel_freq_series[i, 2] = (i - 1) * (rel_freq_series[i - 1, 2]) / i
rel_freq_series[i, 3] = (i - 1) * (rel_freq_series[i - 1, 3]) / i
rel_freq_series[i, 1] = (i - 1) * (rel_freq_series[i - 1, 1]) / i
rel_freq_series[i, 5] = (i - 1) * (rel_freq_series[i - 1, 5]) / i
} else{
rel_freq_series[i, 5] = (i - 1) * (1 + (rel_freq_series[i - 1, 5])) / i
rel_freq_series[i, 2] = (i - 1) * (rel_freq_series[i - 1, 2]) / i
rel_freq_series[i, 3] = (i - 1) * (rel_freq_series[i - 1, 3]) / i
rel_freq_series[i, 4] = (i - 1) * (rel_freq_series[i - 1, 4]) / i
rel_freq_series[i, 1] = (i - 1) * (rel_freq_series[i - 1, 1]) / i
}
}
plot(rel_freq_series)\
rel_freq_series = matrix(data = 0, nrow = 1000, ncol = 5)
for(i in 1:1000){
if(freq_balls[i] == 0){
rel_freq_series[i, 1] = (i - 1) * (1 + rel_freq_series[i - 1, 1]) / i
rel_freq_series[i, 2] = (i - 1) * (rel_freq_series[i - 1, 2]) / i
rel_freq_series[i, 3] = (i - 1) * (rel_freq_series[i - 1, 3]) / i
rel_freq_series[i, 4] = (i - 1) * (rel_freq_series[i - 1, 4]) / i
rel_freq_series[i, 5] = (i - 1) * (rel_freq_series[i - 1, 5]) / i
} else if(freq_balls[i] == 1){
rel_freq_series[i, 2] = (i - 1) * (1 + (rel_freq_series[i - 1, 2])) / i
rel_freq_series[i, 1] = (i - 1) * (rel_freq_series[i - 1, 1]) / i
rel_freq_series[i, 3] = (i - 1) * (rel_freq_series[i - 1, 3]) / i
rel_freq_series[i, 4] = (i - 1) * (rel_freq_series[i - 1, 4]) / i
rel_freq_series[i, 5] = (i - 1) * (rel_freq_series[i - 1, 5]) / i
} else if(freq_balls[i] == 2){
rel_freq_series[i, 3] = (i - 1) * (1 + (rel_freq_series[i - 1, 3])) / i
rel_freq_series[i, 2] = (i - 1) * (rel_freq_series[i - 1, 2]) / i
rel_freq_series[i, 1] = (i - 1) * (rel_freq_series[i - 1, 1]) / i
rel_freq_series[i, 4] = (i - 1) * (rel_freq_series[i - 1, 4]) / i
rel_freq_series[i, 5] = (i - 1) * (rel_freq_series[i - 1, 5]) / i
} else if(freq_balls[i] == 3){
rel_freq_series[i, 4] = (i - 1) * (1 + (rel_freq_series[i - 1, 4])) / i
rel_freq_series[i, 2] = (i - 1) * (rel_freq_series[i - 1, 2]) / i
rel_freq_series[i, 3] = (i - 1) * (rel_freq_series[i - 1, 3]) / i
rel_freq_series[i, 1] = (i - 1) * (rel_freq_series[i - 1, 1]) / i
rel_freq_series[i, 5] = (i - 1) * (rel_freq_series[i - 1, 5]) / i
} else{
rel_freq_series[i, 5] = (i - 1) * (1 + (rel_freq_series[i - 1, 5])) / i
rel_freq_series[i, 2] = (i - 1) * (rel_freq_series[i - 1, 2]) / i
rel_freq_series[i, 3] = (i - 1) * (rel_freq_series[i - 1, 3]) / i
rel_freq_series[i, 4] = (i - 1) * (rel_freq_series[i - 1, 4]) / i
rel_freq_series[i, 1] = (i - 1) * (rel_freq_series[i - 1, 1]) / i
}
}
plot(rel_freq_series)
for(i in 2:1000){
if(freq_balls[i] == 0){
rel_freq_series[i, 1] = (i - 1) * (1 + rel_freq_series[i - 1, 1]) / i
rel_freq_series[i, 2] = (i - 1) * (rel_freq_series[i - 1, 2]) / i
rel_freq_series[i, 3] = (i - 1) * (rel_freq_series[i - 1, 3]) / i
rel_freq_series[i, 4] = (i - 1) * (rel_freq_series[i - 1, 4]) / i
rel_freq_series[i, 5] = (i - 1) * (rel_freq_series[i - 1, 5]) / i
} else if(freq_balls[i] == 1){
rel_freq_series[i, 2] = (i - 1) * (1 + (rel_freq_series[i - 1, 2])) / i
rel_freq_series[i, 1] = (i - 1) * (rel_freq_series[i - 1, 1]) / i
rel_freq_series[i, 3] = (i - 1) * (rel_freq_series[i - 1, 3]) / i
rel_freq_series[i, 4] = (i - 1) * (rel_freq_series[i - 1, 4]) / i
rel_freq_series[i, 5] = (i - 1) * (rel_freq_series[i - 1, 5]) / i
} else if(freq_balls[i] == 2){
rel_freq_series[i, 3] = (i - 1) * (1 + (rel_freq_series[i - 1, 3])) / i
rel_freq_series[i, 2] = (i - 1) * (rel_freq_series[i - 1, 2]) / i
rel_freq_series[i, 1] = (i - 1) * (rel_freq_series[i - 1, 1]) / i
rel_freq_series[i, 4] = (i - 1) * (rel_freq_series[i - 1, 4]) / i
rel_freq_series[i, 5] = (i - 1) * (rel_freq_series[i - 1, 5]) / i
} else if(freq_balls[i] == 3){
rel_freq_series[i, 4] = (i - 1) * (1 + (rel_freq_series[i - 1, 4])) / i
rel_freq_series[i, 2] = (i - 1) * (rel_freq_series[i - 1, 2]) / i
rel_freq_series[i, 3] = (i - 1) * (rel_freq_series[i - 1, 3]) / i
rel_freq_series[i, 1] = (i - 1) * (rel_freq_series[i - 1, 1]) / i
rel_freq_series[i, 5] = (i - 1) * (rel_freq_series[i - 1, 5]) / i
} else{
rel_freq_series[i, 5] = (i - 1) * (1 + (rel_freq_series[i - 1, 5])) / i
rel_freq_series[i, 2] = (i - 1) * (rel_freq_series[i - 1, 2]) / i
rel_freq_series[i, 3] = (i - 1) * (rel_freq_series[i - 1, 3]) / i
rel_freq_series[i, 4] = (i - 1) * (rel_freq_series[i - 1, 4]) / i
rel_freq_series[i, 1] = (i - 1) * (rel_freq_series[i - 1, 1]) / i
}
}
plot(rel_freq_series)
rel_freq_series
for(i in 2:5){
if(freq_balls[i] == 0){
rel_freq_series[i, 1] = (i - 1) * (1 + rel_freq_series[i - 1, 1]) / i
rel_freq_series[i, 2] = (i - 1) * (rel_freq_series[i - 1, 2]) / i
rel_freq_series[i, 3] = (i - 1) * (rel_freq_series[i - 1, 3]) / i
rel_freq_series[i, 4] = (i - 1) * (rel_freq_series[i - 1, 4]) / i
rel_freq_series[i, 5] = (i - 1) * (rel_freq_series[i - 1, 5]) / i
} else if(freq_balls[i] == 1){
rel_freq_series[i, 2] = (i - 1) * (1 + (rel_freq_series[i - 1, 2])) / i
rel_freq_series[i, 1] = (i - 1) * (rel_freq_series[i - 1, 1]) / i
rel_freq_series[i, 3] = (i - 1) * (rel_freq_series[i - 1, 3]) / i
rel_freq_series[i, 4] = (i - 1) * (rel_freq_series[i - 1, 4]) / i
rel_freq_series[i, 5] = (i - 1) * (rel_freq_series[i - 1, 5]) / i
} else if(freq_balls[i] == 2){
rel_freq_series[i, 3] = (i - 1) * (1 + (rel_freq_series[i - 1, 3])) / i
rel_freq_series[i, 2] = (i - 1) * (rel_freq_series[i - 1, 2]) / i
rel_freq_series[i, 1] = (i - 1) * (rel_freq_series[i - 1, 1]) / i
rel_freq_series[i, 4] = (i - 1) * (rel_freq_series[i - 1, 4]) / i
rel_freq_series[i, 5] = (i - 1) * (rel_freq_series[i - 1, 5]) / i
} else if(freq_balls[i] == 3){
rel_freq_series[i, 4] = (i - 1) * (1 + (rel_freq_series[i - 1, 4])) / i
rel_freq_series[i, 2] = (i - 1) * (rel_freq_series[i - 1, 2]) / i
rel_freq_series[i, 3] = (i - 1) * (rel_freq_series[i - 1, 3]) / i
rel_freq_series[i, 1] = (i - 1) * (rel_freq_series[i - 1, 1]) / i
rel_freq_series[i, 5] = (i - 1) * (rel_freq_series[i - 1, 5]) / i
} else{
rel_freq_series[i, 5] = (i - 1) * (1 + (rel_freq_series[i - 1, 5])) / i
rel_freq_series[i, 2] = (i - 1) * (rel_freq_series[i - 1, 2]) / i
rel_freq_series[i, 3] = (i - 1) * (rel_freq_series[i - 1, 3]) / i
rel_freq_series[i, 4] = (i - 1) * (rel_freq_series[i - 1, 4]) / i
rel_freq_series[i, 1] = (i - 1) * (rel_freq_series[i - 1, 1]) / i
}
print(rel_freq_series)
}
for(i in 2:5){
if(freq_balls[i] == 0){
rel_freq_series[i, 1] = (i - 1) * (1 + rel_freq_series[i - 1, 1]) / i
rel_freq_series[i, 2] = (i - 1) * (rel_freq_series[i - 1, 2]) / i
rel_freq_series[i, 3] = (i - 1) * (rel_freq_series[i - 1, 3]) / i
rel_freq_series[i, 4] = (i - 1) * (rel_freq_series[i - 1, 4]) / i
rel_freq_series[i, 5] = (i - 1) * (rel_freq_series[i - 1, 5]) / i
} else if(freq_balls[i] == 1){
rel_freq_series[i, 2] = (i - 1) * (1 + (rel_freq_series[i - 1, 2])) / i
rel_freq_series[i, 1] = (i - 1) * (rel_freq_series[i - 1, 1]) / i
rel_freq_series[i, 3] = (i - 1) * (rel_freq_series[i - 1, 3]) / i
rel_freq_series[i, 4] = (i - 1) * (rel_freq_series[i - 1, 4]) / i
rel_freq_series[i, 5] = (i - 1) * (rel_freq_series[i - 1, 5]) / i
} else if(freq_balls[i] == 2){
rel_freq_series[i, 3] = (i - 1) * (1 + (rel_freq_series[i - 1, 3])) / i
rel_freq_series[i, 2] = (i - 1) * (rel_freq_series[i - 1, 2]) / i
rel_freq_series[i, 1] = (i - 1) * (rel_freq_series[i - 1, 1]) / i
rel_freq_series[i, 4] = (i - 1) * (rel_freq_series[i - 1, 4]) / i
rel_freq_series[i, 5] = (i - 1) * (rel_freq_series[i - 1, 5]) / i
} else if(freq_balls[i] == 3){
rel_freq_series[i, 4] = (i - 1) * (1 + (rel_freq_series[i - 1, 4])) / i
rel_freq_series[i, 2] = (i - 1) * (rel_freq_series[i - 1, 2]) / i
rel_freq_series[i, 3] = (i - 1) * (rel_freq_series[i - 1, 3]) / i
rel_freq_series[i, 1] = (i - 1) * (rel_freq_series[i - 1, 1]) / i
rel_freq_series[i, 5] = (i - 1) * (rel_freq_series[i - 1, 5]) / i
} else{
rel_freq_series[i, 5] = (i - 1) * (1 + (rel_freq_series[i - 1, 5])) / i
rel_freq_series[i, 2] = (i - 1) * (rel_freq_series[i - 1, 2]) / i
rel_freq_series[i, 3] = (i - 1) * (rel_freq_series[i - 1, 3]) / i
rel_freq_series[i, 4] = (i - 1) * (rel_freq_series[i - 1, 4]) / i
rel_freq_series[i, 1] = (i - 1) * (rel_freq_series[i - 1, 1]) / i
}
print(rel_freq_series)
}
for(i in 2:5){
if(freq_balls[i] == 0){
rel_freq_series[i, 1] = (1 + (i - 1) * rel_freq_series[i - 1, 1]) / i
rel_freq_series[i, 2] = (i - 1) * (rel_freq_series[i - 1, 2]) / i
rel_freq_series[i, 3] = (i - 1) * (rel_freq_series[i - 1, 3]) / i
rel_freq_series[i, 4] = (i - 1) * (rel_freq_series[i - 1, 4]) / i
rel_freq_series[i, 5] = (i - 1) * (rel_freq_series[i - 1, 5]) / i
} else if(freq_balls[i] == 1){
rel_freq_series[i, 2] = (1 + (i - 1) * (rel_freq_series[i - 1, 2])) / i
rel_freq_series[i, 1] = (i - 1) * (rel_freq_series[i - 1, 1]) / i
rel_freq_series[i, 3] = (i - 1) * (rel_freq_series[i - 1, 3]) / i
rel_freq_series[i, 4] = (i - 1) * (rel_freq_series[i - 1, 4]) / i
rel_freq_series[i, 5] = (i - 1) * (rel_freq_series[i - 1, 5]) / i
} else if(freq_balls[i] == 2){
rel_freq_series[i, 3] = (1 + (i - 1) * (rel_freq_series[i - 1, 3])) / i
rel_freq_series[i, 2] = (i - 1) * (rel_freq_series[i - 1, 2]) / i
rel_freq_series[i, 1] = (i - 1) * (rel_freq_series[i - 1, 1]) / i
rel_freq_series[i, 4] = (i - 1) * (rel_freq_series[i - 1, 4]) / i
rel_freq_series[i, 5] = (i - 1) * (rel_freq_series[i - 1, 5]) / i
} else if(freq_balls[i] == 3){
rel_freq_series[i, 4] = (1 + (i - 1) * (rel_freq_series[i - 1, 4])) / i
rel_freq_series[i, 2] = (i - 1) * (rel_freq_series[i - 1, 2]) / i
rel_freq_series[i, 3] = (i - 1) * (rel_freq_series[i - 1, 3]) / i
rel_freq_series[i, 1] = (i - 1) * (rel_freq_series[i - 1, 1]) / i
rel_freq_series[i, 5] = (i - 1) * (rel_freq_series[i - 1, 5]) / i
} else{
rel_freq_series[i, 5] = (1 + (i - 1) * (rel_freq_series[i - 1, 5])) / i
rel_freq_series[i, 2] = (i - 1) * (rel_freq_series[i - 1, 2]) / i
rel_freq_series[i, 3] = (i - 1) * (rel_freq_series[i - 1, 3]) / i
rel_freq_series[i, 4] = (i - 1) * (rel_freq_series[i - 1, 4]) / i
rel_freq_series[i, 1] = (i - 1) * (rel_freq_series[i - 1, 1]) / i
}
print(rel_freq_series)
}
for(i in 2:1000){
if(freq_balls[i] == 0){
rel_freq_series[i, 1] = (1 + (i - 1) * rel_freq_series[i - 1, 1]) / i
rel_freq_series[i, 2] = (i - 1) * (rel_freq_series[i - 1, 2]) / i
rel_freq_series[i, 3] = (i - 1) * (rel_freq_series[i - 1, 3]) / i
rel_freq_series[i, 4] = (i - 1) * (rel_freq_series[i - 1, 4]) / i
rel_freq_series[i, 5] = (i - 1) * (rel_freq_series[i - 1, 5]) / i
} else if(freq_balls[i] == 1){
rel_freq_series[i, 2] = (1 + (i - 1) * (rel_freq_series[i - 1, 2])) / i
rel_freq_series[i, 1] = (i - 1) * (rel_freq_series[i - 1, 1]) / i
rel_freq_series[i, 3] = (i - 1) * (rel_freq_series[i - 1, 3]) / i
rel_freq_series[i, 4] = (i - 1) * (rel_freq_series[i - 1, 4]) / i
rel_freq_series[i, 5] = (i - 1) * (rel_freq_series[i - 1, 5]) / i
} else if(freq_balls[i] == 2){
rel_freq_series[i, 3] = (1 + (i - 1) * (rel_freq_series[i - 1, 3])) / i
rel_freq_series[i, 2] = (i - 1) * (rel_freq_series[i - 1, 2]) / i
rel_freq_series[i, 1] = (i - 1) * (rel_freq_series[i - 1, 1]) / i
rel_freq_series[i, 4] = (i - 1) * (rel_freq_series[i - 1, 4]) / i
rel_freq_series[i, 5] = (i - 1) * (rel_freq_series[i - 1, 5]) / i
} else if(freq_balls[i] == 3){
rel_freq_series[i, 4] = (1 + (i - 1) * (rel_freq_series[i - 1, 4])) / i
rel_freq_series[i, 2] = (i - 1) * (rel_freq_series[i - 1, 2]) / i
rel_freq_series[i, 3] = (i - 1) * (rel_freq_series[i - 1, 3]) / i
rel_freq_series[i, 1] = (i - 1) * (rel_freq_series[i - 1, 1]) / i
rel_freq_series[i, 5] = (i - 1) * (rel_freq_series[i - 1, 5]) / i
} else{
rel_freq_series[i, 5] = (1 + (i - 1) * (rel_freq_series[i - 1, 5])) / i
rel_freq_series[i, 2] = (i - 1) * (rel_freq_series[i - 1, 2]) / i
rel_freq_series[i, 3] = (i - 1) * (rel_freq_series[i - 1, 3]) / i
rel_freq_series[i, 4] = (i - 1) * (rel_freq_series[i - 1, 4]) / i
rel_freq_series[i, 1] = (i - 1) * (rel_freq_series[i - 1, 1]) / i
}
print(rel_freq_series)
}
plot(rel_freq_series)
rel_freq_series = matrix(data = 0, nrow = 1000, ncol = 5)
for(i in 2:1000){
if(freq_balls[i] == 0){
rel_freq_series[i, 1] = (1 + (i - 1) * rel_freq_series[i - 1, 1]) / i
rel_freq_series[i, 2] = (i - 1) * (rel_freq_series[i - 1, 2]) / i
rel_freq_series[i, 3] = (i - 1) * (rel_freq_series[i - 1, 3]) / i
rel_freq_series[i, 4] = (i - 1) * (rel_freq_series[i - 1, 4]) / i
rel_freq_series[i, 5] = (i - 1) * (rel_freq_series[i - 1, 5]) / i
} else if(freq_balls[i] == 1){
rel_freq_series[i, 2] = (1 + (i - 1) * (rel_freq_series[i - 1, 2])) / i
rel_freq_series[i, 1] = (i - 1) * (rel_freq_series[i - 1, 1]) / i
rel_freq_series[i, 3] = (i - 1) * (rel_freq_series[i - 1, 3]) / i
rel_freq_series[i, 4] = (i - 1) * (rel_freq_series[i - 1, 4]) / i
rel_freq_series[i, 5] = (i - 1) * (rel_freq_series[i - 1, 5]) / i
} else if(freq_balls[i] == 2){
rel_freq_series[i, 3] = (1 + (i - 1) * (rel_freq_series[i - 1, 3])) / i
rel_freq_series[i, 2] = (i - 1) * (rel_freq_series[i - 1, 2]) / i
rel_freq_series[i, 1] = (i - 1) * (rel_freq_series[i - 1, 1]) / i
rel_freq_series[i, 4] = (i - 1) * (rel_freq_series[i - 1, 4]) / i
rel_freq_series[i, 5] = (i - 1) * (rel_freq_series[i - 1, 5]) / i
} else if(freq_balls[i] == 3){
rel_freq_series[i, 4] = (1 + (i - 1) * (rel_freq_series[i - 1, 4])) / i
rel_freq_series[i, 2] = (i - 1) * (rel_freq_series[i - 1, 2]) / i
rel_freq_series[i, 3] = (i - 1) * (rel_freq_series[i - 1, 3]) / i
rel_freq_series[i, 1] = (i - 1) * (rel_freq_series[i - 1, 1]) / i
rel_freq_series[i, 5] = (i - 1) * (rel_freq_series[i - 1, 5]) / i
} else{
rel_freq_series[i, 5] = (1 + (i - 1) * (rel_freq_series[i - 1, 5])) / i
rel_freq_series[i, 2] = (i - 1) * (rel_freq_series[i - 1, 2]) / i
rel_freq_series[i, 3] = (i - 1) * (rel_freq_series[i - 1, 3]) / i
rel_freq_series[i, 4] = (i - 1) * (rel_freq_series[i - 1, 4]) / i
rel_freq_series[i, 1] = (i - 1) * (rel_freq_series[i - 1, 1]) / i
}
}
plot(rel_freq_series)
rel_freq_series
?plot
plot(x = seq(1, 1000, 1), y = rel_freq_series[1, ], xlab = "freqs", ylab = "reps", type = "l", main = "Relative frequencies of number of blue balls")
plot(x = seq(1, 1000, 1), y = rel_freq_series[, 1], xlab = "freqs", ylab = "reps", type = "l", main = "Relative frequencies of number of blue balls")
a = seq(1, 1000, 1)
plot(x = a, y = rel_freq_series[, 1], col = "red", xlab = "freqs", ylab = "reps", type = "l", main = "Relative frequencies of number of blue balls")
lines()
rel_freq_series(a, rel_freq_series[, 2], col = "yellow")
rel_freq_series(a, rel_freq_series[, 3], col = "green")
rel_freq_series(a, rel_freq_series[, 4], col = "blue")
rel_freq_series(a, rel_freq_series[, 5], col = "purple")
legend("topleft", legend = c(0, 1, 2, 3, 4), col = c("red", "yellow", "green", "blue", "purple"))
a = seq(1, 1000, 1)
plot(x = a, y = rel_freq_series[, 1], col = "red", xlab = "freqs", ylab = "reps", type = "l", main = "Relative frequencies of number of blue balls")
lines()
rel_freq_series(x = a, y = rel_freq_series[, 2], col = "yellow")
rel_freq_series(x = a, y = rel_freq_series[, 3], col = "green")
rel_freq_series(x = a, y = rel_freq_series[, 4], col = "blue")
rel_freq_series(x = a, y = rel_freq_series[, 5], col = "purple")
legend("topright", legend = c(0, 1, 2, 3, 4), col = c("red", "yellow", "green", "blue", "purple"))
a = seq(1, 1000, 1)
plot(x = a, y = rel_freq_series[, 1], col = "red", xlab = "freqs", ylab = "reps", type = "l", main = "Relative frequencies of number of blue balls")
lines(x = a, y = rel_freq_series[, 2], col = "yellow")
lines(x = a, y = rel_freq_series[, 3], col = "green")
lines(x = a, y = rel_freq_series[, 4], col = "blue")
lines(x = a, y = rel_freq_series[, 5], col = "purple")
legend("topright", legend = c(0, 1, 2, 3, 4), col = c("red", "yellow", "green", "blue", "purple"))
plot(x = a, y = rel_freq_series[, 1], col = "red", xlab = "freqs", ylab = "reps", type = "l", main = "Relative frequencies of number of blue balls", ylim = 1)
lines(x = a, y = rel_freq_series[, 2], col = "yellow")
lines(x = a, y = rel_freq_series[, 3], col = "green")
lines(x = a, y = rel_freq_series[, 4], col = "blue")
lines(x = a, y = rel_freq_series[, 5], col = "purple")
legend("topright", legend = c(0, 1, 2, 3, 4), col = c("red", "yellow", "green", "blue", "purple"))
plot(x = a, y = rel_freq_series[, 1], col = "red", xlab = "freqs", ylab = "reps", type = "l", main = "Relative frequencies of number of blue balls", ylim = 0.5)
lines(x = a, y = rel_freq_series[, 2], col = "yellow")
lines(x = a, y = rel_freq_series[, 3], col = "green")
lines(x = a, y = rel_freq_series[, 4], col = "blue")
lines(x = a, y = rel_freq_series[, 5], col = "purple")
legend("topright", legend = c(0, 1, 2, 3, 4), col = c("red", "yellow", "green", "blue", "purple"))
plot(x = a, y = rel_freq_series[, 1], col = "red", xlab = "freqs", ylab = "reps", type = "l", main = "Relative frequencies of number of blue balls")
lines(x = a, y = rel_freq_series[, 2], col = "yellow")
lines(x = a, y = rel_freq_series[, 3], col = "green")
lines(x = a, y = rel_freq_series[, 4], col = "blue")
lines(x = a, y = rel_freq_series[, 5], col = "purple")
legend("topright", legend = c(0, 1, 2, 3, 4), col = c("red", "yellow", "green", "blue", "purple"))
a = seq(1, 1000, 1)
plot(x = a, y = rel_freq_series[, 1], col = "red", xlab = "freqs", ylab = "reps", type = "l", main = "Relative frequencies of number of blue balls", ylim = c(0, 1))
lines(x = a, y = rel_freq_series[, 2], col = "yellow")
lines(x = a, y = rel_freq_series[, 3], col = "green")
lines(x = a, y = rel_freq_series[, 4], col = "blue")
lines(x = a, y = rel_freq_series[, 5], col = "purple")
legend("topright", legend = c(0, 1, 2, 3, 4), col = c("red", "yellow", "green", "blue", "purple"))
plot(x = a, y = rel_freq_series[, 1], col = "red", xlab = "freqs", ylab = "reps", type = "l", main = "Relative frequencies of number of blue balls", ylim = c(0, 1))
lines(x = a, y = rel_freq_series[, 2], col = "yellow")
lines(x = a, y = rel_freq_series[, 3], col = "green")
lines(x = a, y = rel_freq_series[, 4], col = "blue")
lines(x = a, y = rel_freq_series[, 5], col = "purple")
legend("topright", legend = c(0, 1, 2, 3, 4), fill = c("red", "yellow", "green", "blue", "purple"))
shiny::runApp('D:/2019-2020/UC Berkeley/Courses/Stat 133/Lab/Lab 10/lab10')
runApp('D:/2019-2020/UC Berkeley/Courses/Stat 133/Lab/Lab 10/app2.R/app2.R')
runApp('D:/2019-2020/UC Berkeley/Courses/Stat 133/Lab/Lab 10/app3')
runApp('D:/2019-2020/UC Berkeley/Courses/Stat 133/Lab/Lab 10/app4/app4.R')
